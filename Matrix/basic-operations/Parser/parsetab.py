
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'C_PAREN DIVIDE ID MATRIX MINUS NEWLINE NUMBER O_PAREN PLUS SOLVE TIMEScode_file : middleware_section solve_sectionmiddleware_section : matrix_sectionmatrix_section   : matrix_declaration\n                        | matrix_declaration matrix_sectionmatrix_declaration : MATRIX ID NEWLINE matrix_content matrix_content   : matrix_row NEWLINE\n                        | matrix_row NEWLINE matrix_contentmatrix_row   : NUMBER\n                    | NUMBER matrix_rowsolve_section : SOLVE NEWLINE solve_listsolve_list   : expression NEWLINE\n                    | expression NEWLINE solve_listexpression : expression PLUS term\n                  | expression MINUS termexpression : termterm : term TIMES factor\n            | term DIVIDE factorterm : factorfactor : IDfactor : O_PAREN expression C_PAREN'
    
_lr_action_items = {'MATRIX':([0,4,18,27,35,],[5,5,-5,-6,-7,]),'$end':([1,6,12,21,29,],[0,-1,-10,-11,-12,]),'SOLVE':([2,3,4,8,18,27,35,],[7,-2,-3,-4,-5,-6,-7,]),'ID':([5,10,17,21,22,23,24,25,],[9,16,16,16,16,16,16,16,]),'NEWLINE':([7,9,13,14,15,16,19,20,28,30,31,32,33,34,],[10,11,21,-15,-18,-19,27,-8,-9,-13,-14,-16,-17,-20,]),'O_PAREN':([10,17,21,22,23,24,25,],[17,17,17,17,17,17,17,]),'NUMBER':([11,20,27,],[20,20,20,]),'PLUS':([13,14,15,16,26,30,31,32,33,34,],[22,-15,-18,-19,22,-13,-14,-16,-17,-20,]),'MINUS':([13,14,15,16,26,30,31,32,33,34,],[23,-15,-18,-19,23,-13,-14,-16,-17,-20,]),'C_PAREN':([14,15,16,26,30,31,32,33,34,],[-15,-18,-19,34,-13,-14,-16,-17,-20,]),'TIMES':([14,15,16,30,31,32,33,34,],[24,-18,-19,24,24,-16,-17,-20,]),'DIVIDE':([14,15,16,30,31,32,33,34,],[25,-18,-19,25,25,-16,-17,-20,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'code_file':([0,],[1,]),'middleware_section':([0,],[2,]),'matrix_section':([0,4,],[3,8,]),'matrix_declaration':([0,4,],[4,4,]),'solve_section':([2,],[6,]),'solve_list':([10,21,],[12,29,]),'expression':([10,17,21,],[13,26,13,]),'term':([10,17,21,22,23,],[14,14,14,30,31,]),'factor':([10,17,21,22,23,24,25,],[15,15,15,15,15,32,33,]),'matrix_content':([11,27,],[18,35,]),'matrix_row':([11,20,27,],[19,28,19,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> code_file","S'",1,None,None,None),
  ('code_file -> middleware_section solve_section','code_file',2,'p_code_matrix','MatrixParser.py',10),
  ('middleware_section -> matrix_section','middleware_section',1,'p_middleware_section','MatrixParser.py',15),
  ('matrix_section -> matrix_declaration','matrix_section',1,'p_matrix_dec_section','MatrixParser.py',21),
  ('matrix_section -> matrix_declaration matrix_section','matrix_section',2,'p_matrix_dec_section','MatrixParser.py',22),
  ('matrix_declaration -> MATRIX ID NEWLINE matrix_content','matrix_declaration',4,'p_matrix_declaration','MatrixParser.py',30),
  ('matrix_content -> matrix_row NEWLINE','matrix_content',2,'p_matrix_definition','MatrixParser.py',34),
  ('matrix_content -> matrix_row NEWLINE matrix_content','matrix_content',3,'p_matrix_definition','MatrixParser.py',35),
  ('matrix_row -> NUMBER','matrix_row',1,'p_matrix_definition_line','MatrixParser.py',43),
  ('matrix_row -> NUMBER matrix_row','matrix_row',2,'p_matrix_definition_line','MatrixParser.py',44),
  ('solve_section -> SOLVE NEWLINE solve_list','solve_section',3,'p_solve_section','MatrixParser.py',53),
  ('solve_list -> expression NEWLINE','solve_list',2,'p_operation_list','MatrixParser.py',60),
  ('solve_list -> expression NEWLINE solve_list','solve_list',3,'p_operation_list','MatrixParser.py',61),
  ('expression -> expression PLUS term','expression',3,'p_expression_plus_minu','MatrixParser.py',70),
  ('expression -> expression MINUS term','expression',3,'p_expression_plus_minu','MatrixParser.py',71),
  ('expression -> term','expression',1,'p_expression_term','MatrixParser.py',75),
  ('term -> term TIMES factor','term',3,'p_term_times_div','MatrixParser.py',79),
  ('term -> term DIVIDE factor','term',3,'p_term_times_div','MatrixParser.py',80),
  ('term -> factor','term',1,'p_term_factor','MatrixParser.py',84),
  ('factor -> ID','factor',1,'p_factor_num','MatrixParser.py',88),
  ('factor -> O_PAREN expression C_PAREN','factor',3,'p_factor_parenthesis_exp','MatrixParser.py',91),
]
